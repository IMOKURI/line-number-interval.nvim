Include: include/setup.vader

Execute (Run checkhealth.):
    checkhealth line_number_interval
    $d
    s/ \d\+\.\d\+\.\d\+//

Expect (Check checkhealth.):

  health#line_number_interval#check
  ========================================================================
  ## line-number-interval.nvim
    - OK: Neovim version is fine.

Execute (Check default global variables.):
    AssertEqual 10, g:line_number_interval
    AssertEqual 0, g:line_number_interval#use_custom

Execute (Check fibonacci sequence.):
    AssertEqual [1, 2, 3, 5, 8, 13, 21], line_number_interval#fibonacci()

Execute (Check highlight with default color.):
    AssertEqual "\nLineNr         xxx ctermfg=11 guifg=Yellow", execute('highlight LineNr')

    LineNumberIntervalEnable

    AssertEqual "\nLineNr         xxx ctermfg=0 guifg=Black", execute('highlight LineNr')
    AssertEqual "\nDimLineNr      xxx cleared", execute('highlight DimLineNr')
    AssertEqual "\nHighlightedLineNr xxx ctermfg=11 guifg=Yellow", execute('highlight HighlightedLineNr')

    LineNumberIntervalDisable

    AssertEqual "\nLineNr         xxx ctermfg=11 guifg=Yellow", execute('highlight LineNr')

Execute (Check highlight with configured color.):
    highlight HighlightedLineNr guifg=White ctermfg=7
    highlight DimLineNr guifg=Magenta ctermfg=5

    AssertEqual "\nLineNr         xxx ctermfg=11 guifg=Yellow", execute('highlight LineNr')

    LineNumberIntervalEnable

    AssertEqual "\nLineNr         xxx ctermfg=5 guifg=Magenta", execute('highlight LineNr')
    AssertEqual "\nDimLineNr      xxx ctermfg=5 guifg=Magenta", execute('highlight DimLineNr')
    AssertEqual "\nHighlightedLineNr xxx ctermfg=7 guifg=White", execute('highlight HighlightedLineNr')

    LineNumberIntervalDisable

    AssertEqual "\nLineNr         xxx ctermfg=11 guifg=Yellow", execute('highlight LineNr')

Execute (Check autocmd.):
    AssertThrows autocmd LineNumberInterval
    AssertEqual "Vim(autocmd):E216: No such group or event: LineNumberInterval", g:vader_exception

    LineNumberIntervalEnable

    AssertEqual "\n--- Autocommands ---\nLineNumberInterval  BufNewFile\n    *         call line_number_interval#update()\nLineNumberInterval  BufReadPost\n    *         call line_number_interval#update()\nLineNumberInterval  CursorMoved\n    *         call line_number_interval#update()\nLineNumberInterval  CursorMovedI\n    *         call line_number_interval#update()", execute('autocmd LineNumberInterval')

    LineNumberIntervalDisable

    AssertEqual "\n--- Autocommands ---", execute('autocmd LineNumberInterval')

Execute (Check sign group.):
    AssertThrows sign list LineNumberInterval
    AssertEqual "Vim(sign):E155: Unknown sign: LineNumberInterval", g:vader_exception
    AssertEqual "\n--- Signs ---\n", execute('sign place group=LineNumberGroup')

    LineNumberIntervalEnable

    AssertEqual "\nsign LineNumberInterval numhl=HighlightedLineNr", execute('sign list LineNumberInterval')
    AssertEqual "\n--- Signs ---\n", execute('sign place group=LineNumberGroup')

    LineNumberIntervalDisable

    AssertThrows sign list LineNumberInterval
    AssertEqual "Vim(sign):E155: Unknown sign: LineNumberInterval", g:vader_exception
    AssertEqual "\n--- Signs ---\n", execute('sign place group=LineNumberGroup')

Execute (Check toggle.):
    AssertEqual "\nLineNr         xxx ctermfg=11 guifg=Yellow", execute('highlight LineNr')

    LineNumberIntervalToggle

    AssertEqual "\nLineNr         xxx ctermfg=0 guifg=Black", execute('highlight LineNr')

    LineNumberIntervalToggle

    AssertEqual "\nLineNr         xxx ctermfg=11 guifg=Yellow", execute('highlight LineNr')
